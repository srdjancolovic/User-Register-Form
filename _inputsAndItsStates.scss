/////////INPUT FIELD AND LABEL WITH STATES (ACTIVE, FILLED,ERROR, SUCCESS, DISABLED)
@mixin input-and-states-styles {
  width: 100%;
  height: 48px;
  padding: 12px 16px;
  border-radius: 8px;
  margin-bottom: 10px;
  background: #f4f6f9;
  border: none;
  @include input-font-style;
  &:focus {
    background: #ffffff;
    border: 3px solid #004ad7;
    outline: none;
  }
  //Disabled input
  &:disabled {
    background: rgba(244, 246, 249, 0.5);
  }

  //REQUORED FILEDS
  &:required {
    &:focus + label {
      padding: 0 6px 0 4px;
    }
    &:not(:focus) + label {
      padding: 0 6px 0 4px;
    }
  }
  //NOT REQUIRED FIELDS
  &:not(:required) {
    &:focus + label {
      padding: 0 4px 0 4px;
    }
    &:not(:focus) + label {
      padding: 0 4px 0 4px;
    }
  }

  //ACTIVE STATE
  &:not(:placeholder-shown) {
    &:focus {
      background: #ffffff;
      border: 3px solid #004ad7;
    }
  }

  &:focus + label {
    opacity: 1;
    color: #004ad7;
  }

  ///////SUCCESS STATE
  &:valid {
    &:not(:placeholder-shown) {
      border: 1px solid #287d3c;
    }
    &:not(:placeholder-shown) + label {
      color: #287d3c;
    }
  }
  ///////FILLED STATE (NOTE: I 've set FILLED STATE to show when input is valid, if input is not valid it will show ERROR STATE)
  //If input is valid, add FILLED STATE style when field has no focus
  &:not(:focus) {
    &:valid {
      &:not(:placeholder-shown) {
        background: #ffffff;
        border: 1px solid #858c94;
      }
      //Label styling for filled state
      &:not(:placeholder-shown) + label {
        background: #ffffff;
        color: rgba(133, 140, 148, 0.8);
        opacity: 1;
      }
    }
  }
  ///////ERROR STATE
  &:invalid {
    &:not(:placeholder-shown) {
      border: 1px solid #da1414;
    }
    &:not(:placeholder-shown) + label {
      color: #da1414;
    }
  }
  //If input is invalid and has no focus, add ERROR STATE
  &:not(:focus) {
    &:invalid {
      //NOTE:We can change here also to FILLED STATE when there is no focus on filed even if input is invalid
      &:not(:placeholder-shown) {
        background: #ffffff;
        border: 1px solid #da1414;
      }
      &:not(:placeholder-shown) + label {
        color: #da1414;
        opacity: 1;
      }
    }
  }
}
//Capitalize input fields
.capitalize {
  text-transform: capitalize;
}
//Set date of birth input to be always in FILLED STATE
#date-of-birth {
  padding-left: 14px;
  text-transform: lowercase;
  &:focus {
    &:not(:placeholder-shown) {
      background: #ffffff;
      border: 1px solid #858c94;
    }
    //Label styling for filled state
    &:not(:placeholder-shown) + label {
      background: #ffffff;
      color: rgba(133, 140, 148, 0.8);
      opacity: 1;
    }
  }
}

//INPUT LABEL DEFAULT STYLE
@mixin Label-default-style {
  z-index: 2000;
  margin-bottom: -10px;
  margin-left: 12px;
  max-width: fit-content;
  color: rgba(133, 140, 148, 0.8);
  font-size: 12px;
  font-weight: 400;
  line-height: 20px;
  background: white;
  border-radius: 8px;
  opacity: 0;
  span {
    color: #da1414;
  }
}

//INPUT FIELD FONT STYLE
@mixin input-font-style {
  color: #09101d;
  opacity: 0.8;
  font-size: 16px;
  font-weight: 600;
  line-height: 24px;
  font-family: "Source Sans Pro";
}

//DROPDOWN INPUT
@mixin dropdown-input {
  .select-dropdown {
    position: absolute;
    width: 100%;
    top: 50%;
    transform: translateY(-50%);
    padding: 0 10px 0 12px;
  }
  select {
    width: 100%;
    height: 24px;
    border: none;
    line-height: 24px;
    @include input-font-style;
    &:focus {
      outline: none;
    }
  }
}
